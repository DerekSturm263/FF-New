enum States
{
    IsCrouching,
    IsJumping,
    IsFastFalling,
    IsBursting,
    IsDodging,
    IsBlocking,
    IsEmoting,
    IsUsingSubWeapon,
    IsUsingUltimate,
    IsInteracting,
    IsUsingMainWeapon,
    IsUsingAltWeapon,
}

[System.Flags]
enum StatesFlag
{
    Move = 1,
    Crouch = 2,
    Jump = 4,
    FastFall = 8,
    Burst = 16,
    Dodge = 32,
    Block = 64,
    Emote = 128,
    Interact = 1024,
}

[System.Flags]
enum Colliders
{
    Ground = 1,
    LeftWall = 2,
    RightWall = 4,
    Ceiling = 8
}

component CharacterController
{
    bool CanInput;
	asset_ref<MovementSettings> Settings;
    bitset[12] States;
    bitset[12] Holding;
    int StateTime;

    Colliders NearbyColliders;
    FP KnockbackVelocityX;
    FP KnockbackVelocityTime;

    // Move
    FP Velocity;
    FP MovingLerp;
    FP Influence;

    // Jump
    bool GroundedJump;
    short JumpCount;
    short JumpSettingsIndex;
    int JumpTime;
    
    // Dodge
    bool GroundedDodge;
    FPVector2 DodgeDirection;
    short DodgeCount;
    short DodgeSettingsIndex;
    int DodgeTime;

    // Attacking/Emoting
    Direction Direction;
    int MovementDirection;
    StatesFlag PossibleStates;
    bool IsCommitted;

    // Ultimate
    int UltimateTime;
}
