// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
// </auto-generated>

namespace Quantum.Editor {
  using Quantum;
  using UnityEngine;
  using UnityEditor;

  [CustomPropertyDrawer(typeof(AssetRefApparelModifier))]
  public class AssetRefApparelModifierPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(ApparelModifierAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefApparelPattern))]
  public class AssetRefApparelPatternPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(ApparelPatternAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefApparelTemplate))]
  public class AssetRefApparelTemplatePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(ApparelTemplateAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBadge))]
  public class AssetRefBadgePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BadgeAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefBehavior))]
  public class AssetRefBehaviorPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BehaviorAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefCameraSettings))]
  public class AssetRefCameraSettingsPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(CameraSettingsAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefCustomAnimatorGraph))]
  public class AssetRefCustomAnimatorGraphPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(CustomAnimatorGraphAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefEmote))]
  public class AssetRefEmotePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(EmoteAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefEyes))]
  public class AssetRefEyesPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(EyesAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefFFAvatar))]
  public class AssetRefFFAvatarPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(FFAvatarAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefFrameEvent))]
  public class AssetRefFrameEventPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(FrameEventAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefHair))]
  public class AssetRefHairPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(HairAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefInfoAsset))]
  public class AssetRefInfoAssetPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(InfoAssetAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefItem))]
  public class AssetRefItemPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(ItemAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefMovementSettings))]
  public class AssetRefMovementSettingsPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(MovementSettingsAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefQuantumAnimationEvent))]
  public class AssetRefQuantumAnimationEventPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(QuantumAnimationEventAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefShakeSettings))]
  public class AssetRefShakeSettingsPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(ShakeSettingsAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefStageAsset))]
  public class AssetRefStageAssetPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(StageAssetAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefStatusEffect))]
  public class AssetRefStatusEffectPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(StatusEffectAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefSubEnhancer))]
  public class AssetRefSubEnhancerPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(SubEnhancerAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefSubTemplate))]
  public class AssetRefSubTemplatePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(SubTemplateAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefTrackGraph))]
  public class AssetRefTrackGraphPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(TrackGraphAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefUltimate))]
  public class AssetRefUltimatePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(UltimateAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefVoice))]
  public class AssetRefVoicePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(VoiceAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefWeaponEnhancer))]
  public class AssetRefWeaponEnhancerPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(WeaponEnhancerAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefWeaponMaterial))]
  public class AssetRefWeaponMaterialPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(WeaponMaterialAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefWeaponTemplate))]
  public class AssetRefWeaponTemplatePropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(WeaponTemplateAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefWinCondition))]
  public class AssetRefWinConditionPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(WinConditionAsset));
    }
  }

  [CustomPropertyDrawer(typeof(Quantum.QString32))]
  partial class QStringDrawer {}

  [CustomPropertyDrawer(typeof(Quantum.Prototypes.Colliders_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.Direction_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.FighterType_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.Goal_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.HurtboxType_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.StagePickerType_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.States_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.StatesFlag_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.InputButtons_Prototype))]
  partial class PrototypeDrawer {}
}
